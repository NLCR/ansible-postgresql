---
- name: yum | Provision
  yum:
    name: postgresql, postgresql-server, python-psycopg2

- name: Default conf is initialized
  shell: service postgresql initdb
  args:
    creates: /var/lib/pgsql/data/postgresql.conf

- name: Db server is running
  service:
    name: postgresql
    state: started
    enabled: yes

- name: 'Db users created: {{ postgresql | join(", ", attribute="user") }}'
  postgresql_user:
    name: '{{ item.user }}'
    password: '{{ item.pass }}' # priv="ALL"
  with_items: '{{ postgresql }}'
  become_user: postgres
  ignore_errors: "{{ ansible_check_mode }}"

- name: 'Dbs created: {{ postgresql | join(", ", attribute="db") }}'
  postgresql_db:
    name: '{{ item.db }}'
    owner: '{{ item.user }}'
    lc_ctype: '{{ item.lc_ctype | default(omit) }}'
    lc_collate: '{{ item.lc_collate | default(omit) }}'
    template: '{{ item.template | default(omit) }}'
  with_items: '{{ postgresql }}'
  become_user: postgres
  ignore_errors: "{{ ansible_check_mode }}"

- name: 'Grant ALL to: {{ postgresql | join(", ", attribute="db") }} by users: {{ postgresql | join(", ", attribute="user") }}'
  postgresql_privs:
    database: '{{ item.db }}'
    roles: '{{ item.user }}'
    type: database
    priv: ALL
  with_items: '{{ postgresql }}'
  become_user: postgres
  ignore_errors: "{{ ansible_check_mode }}"

- name: 'Db accepts connect from users: {{ postgresql | join(", ", attribute="user") }}'
  blockinfile:
    dest: /var/lib/pgsql/data/pg_hba.conf
    insertbefore: '^# "local"'
    state: present
    marker:  '# {mark} ANSIBLE MANAGED BLOCK FOR USER: {{ item.user }}'
    block: |
      local all {{ item.user }} md5
      host all {{ item.user }} 127.0.0.1/32 md5
  with_items: '{{ postgresql }}'
  notify: restart postgresql
  ignore_errors: "{{ ansible_check_mode }}"

- name: "Db listen on {{ ansible_nodename }}"
  blockinfile:
    dest: /var/lib/pgsql/data//postgresql.conf
    insertafter: '^# - Connection Settings -'
    state: present
    marker:  '# {mark} ANSIBLE MANAGED BLOCK FOR {{ ansible_nodename }}'
    block: |
      listen_addresses = '{{ ansible_nodename }}'
  notify: restart postgresql

- name: 'Db accepts TCP/IP users'
  blockinfile:
    dest: /var/lib/pgsql/data/pg_hba.conf
    insertafter: '^# IPv4'
    state: present
    marker:  '# {mark} ANSIBLE MANAGED BLOCK FOR CIDR: {{ item.allow_cidr }}'
    block: |
      host all all {{ item.allow_cidr }} trust
  with_items: '{{ postgresql }}'
  notify: restart postgresql
  when: item.allow_cidr is defined
  ignore_errors: "{{ ansible_check_mode }}"
